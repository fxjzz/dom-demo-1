{"version":3,"sources":["main.js"],"names":["window","dom","find","selector","scope","document","querySelectorAll","style","node","name","value","arguments","length","Object","object","key","each","nodeList","fn","i","call","div","divList","n","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,GAAP,GAAW;AACPC,MADO,gBACFC,QADE,EACQC,KADR,EACc;AACjB,WAAO,CAACA,SAASC,QAAV,EAAoBC,gBAApB,CAAqCH,QAArC,CAAP;AACH,GAHM;AAIPI,OAJO,iBAIDC,IAJC,EAIKC,IAJL,EAIWC,KAJX,EAIiB;AACpB,QAAGC,UAAUC,MAAV,KAAmB,CAAtB,EAAwB;AACtB;AACAJ,WAAKD,KAAL,CAAWE,IAAX,IAAmBC,KAAnB;AACD,KAHD,MAGM,IAAGC,UAAUC,MAAV,KAAmB,CAAtB,EAAwB;AAC5B,UAAG,OAAOH,IAAP,KAAgB,QAAnB,EAA4B;AAC1B;AACA,eAAOD,KAAKD,KAAL,CAAWE,IAAX,CAAP;AACD,OAHD,MAGM,IAAGA,gBAAgBI,MAAnB,EAA0B;AAC9B;AACA,YAAMC,SAASL,IAAf;AACA,aAAI,IAAIM,GAAR,IAAeD,MAAf,EAAsB;AACpBN,eAAKD,KAAL,CAAWQ,GAAX,IAAkBD,OAAOC,GAAP,CAAlB;AACD;AACF;AACF;AACF,GApBI;AAqBLC,MArBK,gBAqBAC,QArBA,EAqBUC,EArBV,EAqBa;AAChB,SAAI,IAAIC,IAAE,CAAV,EAAYA,IAAEF,SAASL,MAAvB,EAA8BO,GAA9B,EAAkC;AAChCD,SAAGE,IAAH,CAAQ,IAAR,EAAcH,SAASE,CAAT,CAAd;AACD;AACF;AAzBI,CAAX;AA2BA,IAAME,MAAMpB,IAAIC,IAAJ,CAAS,OAAT,EAAiB,KAAjB,EAAwB,CAAxB,CAAZ;AACAD,IAAIM,KAAJ,CAAUc,GAAV,EAAe,OAAf,EAAwB,KAAxB;AACA,IAAMC,UAAUrB,IAAIC,IAAJ,CAAS,MAAT,CAAhB;AACAD,IAAIe,IAAJ,CAASM,OAAT,EAAkB,UAACC,CAAD;AAAA,SAAMC,QAAQC,GAAR,CAAYF,CAAZ,CAAN;AAAA,CAAlB","file":"main.af67294f.map","sourceRoot":"..\\src","sourcesContent":["window.dom={\r\n    find(selector, scope){\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    style(node, name, value){\r\n        if(arguments.length===3){\r\n          // dom.style(div, 'color', 'red')\r\n          node.style[name] = value\r\n        }else if(arguments.length===2){\r\n          if(typeof name === 'string'){\r\n            // dom.style(div, 'color')\r\n            return node.style[name]\r\n          }else if(name instanceof Object){\r\n            // dom.style(div, {color: 'red'})\r\n            const object = name\r\n            for(let key in object){\r\n              node.style[key] = object[key]\r\n            }\r\n          }\r\n        }\r\n      },\r\n      each(nodeList, fn){\r\n        for(let i=0;i<nodeList.length;i++){\r\n          fn.call(null, nodeList[i])\r\n        }\r\n      }\r\n}\r\nconst div = dom.find('#test','red')[0]\r\ndom.style(div, 'color', 'red')\r\nconst divList = dom.find('.red') \r\ndom.each(divList, (n)=> console.log(n))"]}